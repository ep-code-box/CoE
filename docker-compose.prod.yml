services:
  nginx:
    depends_on:
      - setup-ssl-dummy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >-
      sh -c "
      CERT_SUM=''; \
      ( while :; do \
          NEW_SUM=$(find /etc/letsencrypt/live -type f -name '*.pem' -exec sha256sum {} + 2>/dev/null | sort | sha256sum || echo 'none'); \
          if [ \"$NEW_SUM\" != \"$CERT_SUM\" ]; then \
            if [ -n \"$CERT_SUM\" ]; then echo '[nginx] certs changed, reloading...'; nginx -s reload; fi; \
            CERT_SUM=\"$NEW_SUM\"; \
          fi; \
          sleep 30; \
        done ) & \
      nginx -g 'daemon off;'
      "

  coe-backend:
    env_file:
      - ./CoE-Backend/.env.prod
    environment:
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
      - RUN_MIGRATIONS=true
      - RAG_PIPELINE_URL=http://coe-ragpipeline:8001

  coe-ragpipeline:
    env_file:
      - ./CoE-RagPipeline/.env.prod
    environment:
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
      - RUN_MIGRATIONS=true

  certbot:
    image: certbot/certbot:latest
    container_name: certbot-prod
    depends_on:
      - nginx
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: >-
      "trap exit TERM; \
      echo 'Waiting for nginx to serve ACME challenge...'; sleep 5; \
      certbot certonly --non-interactive --agree-tos \
        --register-unsafely-without-email \
        --webroot -w /var/www/certbot \
        -d greatcoe.cafe24.com; \
      certbot certonly --non-interactive --agree-tos \
        --register-unsafely-without-email \
        --webroot -w /var/www/certbot \
        -d dev.greatcoe.cafe24.com; \
      echo 'Certificates issued (prod+dev). Auto-renew service will keep them updated.'; \
      sleep infinity"

  certbot-renew:
    image: certbot/certbot:latest
    container_name: certbot-renew-prod
    restart: always
    depends_on:
      - nginx
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: >-
      "while :; do \
         certbot renew --webroot -w /var/www/certbot --quiet --keep-until-expiring; \
         sleep 12h; \
       done"

  setup-ssl-dummy:
    image: alpine:3
    container_name: ssl-dummy-prod
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: >-
      "set -e; \
      apk add --no-cache openssl >/dev/null; \
      mkdir -p /etc/letsencrypt/live/greatcoe.cafe24.com; \
      if [ ! -f /etc/letsencrypt/live/greatcoe.cafe24.com/fullchain.pem ]; then \
        echo 'Creating temporary self-signed cert for greatcoe.cafe24.com'; \
        openssl req -x509 -nodes -newkey rsa:2048 -days 1 \
          -keyout /etc/letsencrypt/live/greatcoe.cafe24.com/privkey.pem \
          -out /etc/letsencrypt/live/greatcoe.cafe24.com/fullchain.pem \
          -subj "/CN=greatcoe.cafe24.com"; \
      else \
        echo 'Existing cert found; skipping self-signed.'; \
      fi; \
      mkdir -p /etc/letsencrypt/live/dev.greatcoe.cafe24.com; \
      if [ ! -f /etc/letsencrypt/live/dev.greatcoe.cafe24.com/fullchain.pem ]; then \
        echo 'Creating temporary self-signed cert for dev.greatcoe.cafe24.com'; \
        openssl req -x509 -nodes -newkey rsa:2048 -days 1 \
          -keyout /etc/letsencrypt/live/dev.greatcoe.cafe24.com/privkey.pem \
          -out /etc/letsencrypt/live/dev.greatcoe.cafe24.com/fullchain.pem \
          -subj "/CN=dev.greatcoe.cafe24.com"; \
      else \
        echo 'Existing cert found; skipping self-signed (dev).'; \
      fi; \
      echo 'Done.'; \
      sleep 1"
