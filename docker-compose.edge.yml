services:
  nginx-edge:
    image: nginx:latest
    container_name: nginx-edge
    depends_on:
      - setup-ssl-dummy-edge
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.edge.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: |
      sh -lc '
        # Wait for dummy/self-signed certs to exist before starting nginx
        for host in greatcoe.cafe24.com dev.greatcoe.cafe24.com; do
          echo "[nginx-edge] waiting for initial cert files for $host..."
          for i in $(seq 1 60); do
            if [ -f "/etc/letsencrypt/live/$host/fullchain.pem" ] && [ -f "/etc/letsencrypt/live/$host/privkey.pem" ]; then
              echo "[nginx-edge] found certs for $host"
              break
            fi
            sleep 1
          done
        done

        CERT_SUM="";
        (
          while :; do
            NEW_SUM=$(find /etc/letsencrypt/live -type f -name "*.pem" -exec sha256sum {} + 2>/dev/null | sort | sha256sum || echo "none")
            if [ "$NEW_SUM" != "$CERT_SUM" ]; then
              if [ -n "$CERT_SUM" ]; then echo "[nginx-edge] certs changed, reloading..."; nginx -s reload; fi
              CERT_SUM="$NEW_SUM"
            fi
            sleep 30
          done
        ) &

        exec nginx -g "daemon off;"
      '

  # Optional: enable after cutover to 80/443 for real certificates
  certbot-edge:
    image: certbot/certbot:latest
    container_name: certbot-edge
    depends_on:
      - nginx-edge
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      trap 'exit 0' TERM INT
      echo 'Waiting for nginx-edge to serve ACME challenge...'
      sleep 5
      certbot certonly --non-interactive --agree-tos \
        --register-unsafely-without-email \
        --webroot -w /var/www/certbot \
        -d greatcoe.cafe24.com \
        -d dev.greatcoe.cafe24.com
      echo 'Certificates issued (edge). Auto-renew service will keep them updated.'
      sleep infinity

  certbot-renew-edge:
    image: certbot/certbot:latest
    container_name: certbot-renew-edge
    restart: always
    depends_on:
      - nginx-edge
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: |
      while :; do
        certbot renew --webroot -w /var/www/certbot --quiet --keep-until-expiring
        sleep 12h
      done

  setup-ssl-dummy-edge:
    image: alpine:3
    container_name: setup-ssl-dummy-edge
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      apk add --no-cache openssl >/dev/null

      # helper to create a minimal self-signed cert (non-interactive)
      gen_self_signed() {
        host="$1"
        dir="/etc/letsencrypt/live/$host"
        mkdir -p "$dir"
        if [ ! -f "$dir/fullchain.pem" ]; then
          echo "Creating temporary self-signed cert for $host"
          openssl genrsa -out "$dir/privkey.pem" 2048 >/dev/null 2>&1
          openssl req -new -key "$dir/privkey.pem" -out "$dir/cert.csr" -subj "/CN=$host" >/dev/null 2>&1
          openssl x509 -req -in "$dir/cert.csr" -signkey "$dir/privkey.pem" -out "$dir/fullchain.pem" -days 3 -sha256 >/dev/null 2>&1
          rm -f "$dir/cert.csr"
        else
          echo "Existing cert found; skipping self-signed for $host"
        fi
      }

      gen_self_signed greatcoe.cafe24.com
      gen_self_signed dev.greatcoe.cafe24.com

      echo 'Done.'
      sleep 1
