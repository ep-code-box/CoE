services:
  # 인프라 서비스들
  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    ports:
      - "6666:8000"
    volumes:
      - ./db/chroma:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
    networks:
      - coe-network

  mariadb:
    image: mariadb
    container_name: mariadb
    ports:
      - "6667:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=acce
    volumes:
      - ./db/maria:/var/lib/mysql
    restart: always
    networks:
      - coe-network

  koEmbeddings:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-latest
    container_name: koEmbeddings
    ports:
      - "6668:80"
    volumes:
      - ./db/koEmbeddings:/data
    restart: always
    command: --model-id onnx-models/paraphrase-multilingual-MiniLM-L12-v2-onnx --port 80
    networks:
      - coe-network

  # 애플리케이션 서비스들
  coe-backend:
    build:
      context: ./CoE-Backend
      dockerfile: Dockerfile
    container_name: coe-backend
    ports:
      - "8000:8000"
    env_file:
      - ./CoE-Backend/.env
    volumes:
      - ./CoE-Backend/flows:/app/flows
    depends_on:
      - chroma
      - mariadb
    restart: always
    networks:
      - coe-network

  coe-rag-pipeline:
    build:
      context: ./CoE-RagPipeline
      dockerfile: Dockerfile
    container_name: coe-rag-pipeline
    ports:
      - "8001:8001"
    env_file:
      - ./CoE-RagPipeline/.env
    volumes:
      - ./CoE-RagPipeline/output:/app/output
      - ./CoE-RagPipeline/chroma_db:/app/chroma_db
    depends_on:
      - chroma
      - koEmbeddings
    restart: always
    networks:
      - coe-network

networks:
  coe-network:
    driver: bridge
