# Docker Compose for Full Docker Deployment
# 전체 Docker 배포 환경용 - 모든 서비스를 Docker 컨테이너로 실행
services:
  # 인프라 서비스들
  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    ports:
      - "6666:8000"
    volumes:
      - ./db/chroma:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
    networks:
      - coe-network
    # healthcheck:
    #   test: ["CMD", "sh", "-c", "exec 3<>/dev/tcp/localhost/8000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "6667:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=acce
      - MARIADB_DATABASE=coe_db
      - MARIADB_USER=coe_user
      - MARIADB_PASSWORD=coe_password
    volumes:
      - ./db/maria:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - coe-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6669:6379"
    volumes:
      - ./db/redis:/data
    restart: always
    command: redis-server --appendonly yes --requirepass coe_redis_password
    networks:
      - coe-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 애플리케이션 서비스들
  coe-backend:
    build:
      context: ./CoE-Backend
      dockerfile: Dockerfile
    container_name: coe-backend
    ports:
      - "8000:8000"
    env_file:
      - ./CoE-Backend/.env
    environment:
      # Docker 환경 오버라이드
      - DB_HOST=mariadb
      - DB_PORT=3306
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LANGFLOW_HOST=langflow
      - LANGFLOW_PORT=7860
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
    volumes:
      - ./CoE-Backend/flows:/app/flows
    depends_on:
      - chroma
      - mariadb
      - redis
    restart: always
    networks:
      - coe-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=coe-backend"
    # healthcheck:
    #   test: ["CMD", "sh", "-c", "exec 3<>/dev/tcp/localhost/8000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  coe-rag-pipeline:
    build:
      context: ./CoE-RagPipeline
      dockerfile: Dockerfile
    container_name: coe-rag-pipeline
    ports:
      - "8001:8001"
    env_file:
      - ./CoE-RagPipeline/.env
    environment:
      # Docker 환경 오버라이드
      - DB_HOST=mariadb
      - DB_PORT=3306
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
    volumes:
      - ./CoE-RagPipeline/output:/app/output
      - ./CoE-RagPipeline/chroma_db:/app/chroma_db
    depends_on:
      - chroma
      - mariadb
      - redis
    restart: always
    networks:
      - coe-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=coe-rag-pipeline"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  coe-network:
    driver: bridge