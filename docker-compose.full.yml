name: coe

networks:
  coe-edge-net:
    driver: bridge
  coe-prod-net:
    driver: bridge
  coe-dev-net:
    driver: bridge

volumes: {}

services:
  # =====================
  # Edge (profiles: edge)
  # =====================
  nginx-edge:
    image: owasp/modsecurity-crs:nginx
    profiles: [edge]
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./nginx/nginx.edge.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/waf/modsecurity.conf:/etc/modsecurity/modsecurity.conf:ro
      - /home/greatjlim/projects/logs/nginx:/var/log/nginx
      - /home/greatjlim/projects/logs/modsecurity:/var/log/modsecurity
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["nginx","-g","daemon off;"]
    networks: [coe-edge-net]

  # Removed certbot/ssl-dummy for HTTP-only setup

  # =====================
  # Prod (profiles: prod)
  # =====================
  chroma-prod:
    image: chromadb/chroma:latest
    profiles: [prod]
    volumes:
      - /home/greatjlim/projects/db/prod/chroma:/data
    networks: [coe-prod-net]

  mariadb-prod:
    image: mariadb:latest
    profiles: [prod]
    environment:
      - MARIADB_ROOT_PASSWORD=acce
      - MARIADB_DATABASE=coe_db
      - MARIADB_USER=coe_user
      - MARIADB_PASSWORD=coe_password
    volumes:
      - /home/greatjlim/projects/db/prod/mariadb:/var/lib/mysql
    networks: [coe-prod-net]
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -uroot -pacce --silent || exit 1"]
      interval: 2s
      timeout: 5s
      retries: 120
      start_period: 15s

  redis-prod:
    image: redis:7-alpine
    profiles: [prod]
    command: redis-server --appendonly yes --requirepass coe_redis_password
    volumes:
      - /home/greatjlim/projects/db/prod/redis:/data
    networks: [coe-prod-net]

  coe-backend-prod:
    build:
      context: ./CoE-Backend
      dockerfile: Dockerfile
    profiles: [prod]
    env_file:
      - ./CoE-Backend/.env.prod
    environment:
      - TZ=Asia/Seoul
      - RUN_MIGRATIONS=true
      - DB_HOST=mariadb-prod
      - DB_PORT=3306
      - CHROMA_HOST=chroma-prod
      - CHROMA_PORT=8000
      - REDIS_HOST=redis-prod
      - REDIS_PORT=6379
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
      - PYTHONUNBUFFERED=1
      - LOG_TO_FILE=true
      - LOG_DIR=/app/logs
      - RAG_PIPELINE_URL=http://coe-ragpipeline-prod:8001
    depends_on:
      mariadb-prod:
        condition: service_healthy
      chroma-prod:
        condition: service_started
      redis-prod:
        condition: service_started
      coe-ragpipeline-prod:
        condition: service_started
    ports:
      - "18000:8000"
    volumes:
      - /home/greatjlim/projects/logs/coe-backend/prod:/app/logs
    
    networks: [coe-prod-net]

  coe-ragpipeline-prod:
    build:
      context: ./CoE-RagPipeline
      dockerfile: Dockerfile
    profiles: [prod]
    env_file:
      - ./CoE-RagPipeline/.env.prod
    environment:
      - TZ=Asia/Seoul
      - RUN_MIGRATIONS=true
      - DB_HOST=mariadb-prod
      - DB_PORT=3306
      - CHROMA_HOST=chroma-prod
      - CHROMA_PORT=8000
      - REDIS_HOST=redis-prod
      - REDIS_PORT=6379
      - APP_ENV=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - RELOAD=false
      - LOG_TO_FILE=true
      - LOG_DIR=/app/logs
    depends_on:
      - chroma-prod
      - mariadb-prod
      - redis-prod
    ports:
      - "18001:8001"
    volumes:
      - /home/greatjlim/projects/logs/coe-ragpipeline/prod:/app/logs
    
    networks: [coe-prod-net]

  # ====================
  # Dev (profiles: dev)
  # ====================
  chroma-dev:
    image: chromadb/chroma:latest
    profiles: [dev]
    volumes:
      - /home/greatjlim/projects/db/dev/chroma:/data
    networks: [coe-dev-net]

  mariadb-dev:
    image: mariadb:latest
    profiles: [dev]
    environment:
      - MARIADB_ROOT_PASSWORD=acce
      - MARIADB_DATABASE=coe_db
      - MARIADB_USER=coe_user
      - MARIADB_PASSWORD=coe_password
    volumes:
      - /home/greatjlim/projects/db/dev/mariadb:/var/lib/mysql
    networks: [coe-dev-net]
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -uroot -pacce --silent || exit 1"]
      interval: 2s
      timeout: 5s
      retries: 120
      start_period: 15s

  redis-dev:
    image: redis:7-alpine
    profiles: [dev]
    command: redis-server --appendonly yes --requirepass coe_redis_password
    volumes:
      - /home/greatjlim/projects/db/dev/redis:/data
    networks: [coe-dev-net]

  coe-backend-dev:
    build:
      context: ./CoE-Backend
    profiles: [dev]
    env_file:
      - ./CoE-Backend/.env.dev
    environment:
      - TZ=Asia/Seoul
      - RUN_MIGRATIONS=true
      - DB_HOST=mariadb-dev
      - DB_PORT=3306
      - CHROMA_HOST=chroma-dev
      - CHROMA_PORT=8000
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - APP_ENV=development
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - RELOAD=false
      - PYTHONUNBUFFERED=1
      - LOG_TO_FILE=true
      - LOG_DIR=/app/logs
      - RAG_PIPELINE_URL=http://coe-ragpipeline-dev:8001
    depends_on:
      mariadb-dev:
        condition: service_healthy
      chroma-dev:
        condition: service_started
      redis-dev:
        condition: service_started
      coe-ragpipeline-dev:
        condition: service_started
    ports:
      - "18002:8000"
    volumes:
      - /home/greatjlim/projects/logs/coe-backend/dev:/app/logs
    
    networks: [coe-dev-net]

  coe-ragpipeline-dev:
    build:
      context: ./CoE-RagPipeline
    profiles: [dev]
    env_file:
      - ./CoE-RagPipeline/.env.dev
    environment:
      - TZ=Asia/Seoul
      - RUN_MIGRATIONS=true
      - DB_HOST=mariadb-dev
      - DB_PORT=3306
      - CHROMA_HOST=chroma-dev
      - CHROMA_PORT=8000
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - APP_ENV=development
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - RELOAD=false
      - LOG_TO_FILE=true
      - LOG_DIR=/app/logs
    depends_on:
      - chroma-dev
      - mariadb-dev
      - redis-dev
    ports:
      - "18003:8001"
    volumes:
      - /home/greatjlim/projects/logs/coe-ragpipeline/dev:/app/logs
    
    networks: [coe-dev-net]
