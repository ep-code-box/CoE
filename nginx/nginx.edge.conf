events {
    worker_connections 1024;
}

http {
    # Logs
    log_format main '$remote_addr - $host:$server_port [$time_local] '
                    '"$request" $status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Upstreams to host-exposed dev/prod backends
    upstream prod_backend { server host.docker.internal:18000; }
    upstream prod_rag     { server host.docker.internal:18001; }
    upstream dev_backend  { server host.docker.internal:18002; }
    upstream dev_rag      { server host.docker.internal:18003; }

    # HTTP (80): prod only (no HTTPS)
    server {
        listen 80;
        server_name greatcoe.cafe24.com;

        access_log /var/log/nginx/prod.access.log main;
        error_log  /var/log/nginx/prod.error.log  warn;

        location / {
            proxy_pass http://prod_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Ensure trailing slash for RAG and proxy to prod RAG
        location = /rag {
            return 301 /rag/;
        }
        location /rag/ {
            proxy_pass http://prod_rag/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # remove HTTPS server for prod

    # HTTP: dev on 8080
    server {
        listen 8080;
        server_name greatcoe.cafe24.com;

        access_log /var/log/nginx/dev.access.log main;
        error_log  /var/log/nginx/dev.error.log  warn;

        location / {
            proxy_pass http://dev_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Ensure trailing slash for RAG
        location = /rag {
            return 301 /rag/;
        }
        location /rag/ {
            proxy_pass http://dev_rag/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # remove HTTPS server for dev
}
