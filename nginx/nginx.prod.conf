events {
    worker_connections 1024;
}

http {
    client_max_body_size 200m;
    upstream backend {
        server coe-backend:8000;
    }

    # Dev backend via host gateway (from prod nginx container)
    upstream dev_backend {
        server host.docker.internal:8002;
    }
    upstream dev_rag {
        server host.docker.internal:8003;
    }

    # HTTP (80): ACME 챌린지 제공 및 HTTPS로 리다이렉트
    server {
        listen 80;
        server_name greatcoe.cafe24.com dev.greatcoe.cafe24.com;

        # ACME 챌린지 경로 (Certbot 웹루트)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 나머지 요청은 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS (443): 실제 서비스 프록시
    server {
        listen 443 ssl;
        server_name greatcoe.cafe24.com;

        ssl_certificate /etc/letsencrypt/live/greatcoe.cafe24.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/greatcoe.cafe24.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Block Swagger/OpenAPI access in production
        location ~ ^/(docs|redoc|openapi\.json)$ {
            return 404;
        }
        location ~ ^/agent/(docs|redoc|openapi\.json)(/.*)?$ {
            return 404;
        }
        location ~ ^/rag/(docs|redoc|openapi\.json)(/.*)?$ {
            return 404;
        }

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /rag/ {
            proxy_pass http://coe-ragpipeline:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # NOTE: Backend-only access (future)
            # To be enforced after grace period. Example restrictions:
            # allow 127.0.0.1; deny all;
            # auth_basic "Restricted";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }
    }

    # HTTPS (443): dev 도메인 프록시
    server {
        listen 443 ssl;
        server_name dev.greatcoe.cafe24.com;

        ssl_certificate /etc/letsencrypt/live/dev.greatcoe.cafe24.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dev.greatcoe.cafe24.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://dev_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /rag/ {
            proxy_pass http://dev_rag/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # NOTE: Backend-only access (future) - dev
        }
    }
}
